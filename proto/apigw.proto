syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.apigw";
option java_outer_classname = "ApigwProto";

package apigw;

service ApigwService {
    rpc Login(LoginReq) returns (LoginResp);
    rpc Logout(LogoutReq) returns (LogoutResp);
	rpc Subscribe (stream Topic) returns (stream Notification);
};

//登录请求
message LoginReq {
    string uid = 1;
    string password = 2;
}

enum ResultType {
    REFUSE_REASON_NONE                 = 0;
    REFUSE_REASON_NO_MSG_SERVER        = 1;
    REFUSE_REASON_MSG_SERVER_FULL      = 2;
    REFUSE_REASON_NO_DB_SERVER         = 3;
    REFUSE_REASON_NO_LOGIN_SERVER      = 4;
    REFUSE_REASON_NO_ROUTE_SERVER      = 5;
    REFUSE_REASON_DB_VALIDATE_FAILED   = 6;
    REFUSE_REASON_VERSION_TOO_OLD      = 7;
    REFUSE_REASON_INVALID_PASSWD       = 8;
    ERROR_CONNECT_TO_AUTH              = 9;
    ERROR_RPC_TO_AUTH                  = 10; 
}


message LoginResp {
    string uid = 1;
    ResultType result_code = 2;
    string result_string = 3;
}

//登出请求
message LogoutReq {
    string uid = 1;
}

message LogoutResp {
}

enum TopicType {
	KICKOUT = 0;
	MSG = 1;
	GOURPMSG = 2;
}

message Topic {
	string uid = 1;
	TopicType type = 2;
}

message Notification {
	string uid = 1;
	TopicType type = 2;
    KickNotify kick = 3;
	MsgNotify msg = 4;	
}

message MsgInfo {
    string send_uid = 1;
    string recv_uid = 2;
    int64  msg_id   = 3;
    string msg_type = 4;
    string msg_body = 5;
    string attachment = 6;
}

message MsgNotify {
	MsgInfo msg_info = 1;	
}

enum KickoutReason {
    OtherLogin = 0;     //其他地方登录
}

message KickNotify {
	string uid = 1;
	KickoutReason reason = 2;	
}
