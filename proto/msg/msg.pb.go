// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg/msg.proto

package msg

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	common "github.com/mloves0824/antalk-go/proto/common"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MsgSendReq struct {
	MsgInfo              *common.MsgInfo `protobuf:"bytes,1,opt,name=msg_info,json=msgInfo,proto3" json:"msg_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MsgSendReq) Reset()         { *m = MsgSendReq{} }
func (m *MsgSendReq) String() string { return proto.CompactTextString(m) }
func (*MsgSendReq) ProtoMessage()    {}
func (*MsgSendReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0f0a1b324c95b77, []int{0}
}

func (m *MsgSendReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSendReq.Unmarshal(m, b)
}
func (m *MsgSendReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSendReq.Marshal(b, m, deterministic)
}
func (m *MsgSendReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendReq.Merge(m, src)
}
func (m *MsgSendReq) XXX_Size() int {
	return xxx_messageInfo_MsgSendReq.Size(m)
}
func (m *MsgSendReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendReq proto.InternalMessageInfo

func (m *MsgSendReq) GetMsgInfo() *common.MsgInfo {
	if m != nil {
		return m.MsgInfo
	}
	return nil
}

type MsgSendResp struct {
	Result               common.ResultType `protobuf:"varint,1,opt,name=result,proto3,enum=common.ResultType" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MsgSendResp) Reset()         { *m = MsgSendResp{} }
func (m *MsgSendResp) String() string { return proto.CompactTextString(m) }
func (*MsgSendResp) ProtoMessage()    {}
func (*MsgSendResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0f0a1b324c95b77, []int{1}
}

func (m *MsgSendResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSendResp.Unmarshal(m, b)
}
func (m *MsgSendResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSendResp.Marshal(b, m, deterministic)
}
func (m *MsgSendResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSendResp.Merge(m, src)
}
func (m *MsgSendResp) XXX_Size() int {
	return xxx_messageInfo_MsgSendResp.Size(m)
}
func (m *MsgSendResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSendResp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSendResp proto.InternalMessageInfo

func (m *MsgSendResp) GetResult() common.ResultType {
	if m != nil {
		return m.Result
	}
	return common.ResultType_ResultOK
}

func init() {
	proto.RegisterType((*MsgSendReq)(nil), "msg.MsgSendReq")
	proto.RegisterType((*MsgSendResp)(nil), "msg.MsgSendResp")
}

func init() { proto.RegisterFile("msg/msg.proto", fileDescriptor_d0f0a1b324c95b77) }

var fileDescriptor_d0f0a1b324c95b77 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4b, 0x87, 0x40,
	0x10, 0xc5, 0x91, 0x40, 0x65, 0xa4, 0x8c, 0xad, 0x43, 0x78, 0x0a, 0x4f, 0x21, 0xb1, 0x82, 0x5d,
	0xaa, 0xa3, 0xb7, 0x0e, 0x82, 0x6c, 0xdd, 0xa3, 0x6c, 0x1d, 0x04, 0x67, 0x77, 0xdb, 0xb1, 0xa8,
	0x6f, 0x1f, 0xea, 0x56, 0xfc, 0x4f, 0xbb, 0xbc, 0x79, 0xbf, 0x99, 0xf7, 0xe0, 0x98, 0x18, 0x6b,
	0x62, 0x94, 0xce, 0xdb, 0xc5, 0x8a, 0x23, 0x62, 0x2c, 0xce, 0x06, 0x4b, 0x64, 0x4d, 0xbd, 0x3f,
	0xfb, 0xa4, 0xbc, 0x05, 0xe8, 0x18, 0x1f, 0xb5, 0x79, 0x53, 0xfa, 0x5d, 0x54, 0x90, 0x12, 0xe3,
	0xf3, 0x64, 0x46, 0x7b, 0x11, 0x5d, 0x46, 0x57, 0x59, 0x93, 0xcb, 0x60, 0xef, 0x18, 0x1f, 0xcc,
	0x68, 0x55, 0x42, 0xfb, 0xa7, 0xbc, 0x83, 0xec, 0x8f, 0x64, 0x27, 0x2a, 0x88, 0xbd, 0xe6, 0x8f,
	0x79, 0xd9, 0xc0, 0x93, 0x46, 0xfc, 0x82, 0x6a, 0x53, 0x9f, 0xbe, 0x9d, 0x56, 0xc1, 0xd1, 0xdc,
	0x87, 0xa3, 0xfe, 0x73, 0x1a, 0xb4, 0xb8, 0x86, 0x24, 0x2c, 0x12, 0xb9, 0x5c, 0x33, 0xff, 0x07,
	0x2a, 0x4e, 0x0f, 0x05, 0x76, 0x6d, 0x09, 0xe7, 0x93, 0x95, 0xe8, 0xdd, 0x20, 0xf5, 0xd7, 0x0b,
	0xb9, 0x59, 0xf3, 0xea, 0x69, 0xd3, 0x8e, 0xb1, 0x5f, 0x2b, 0xf5, 0xd1, 0x6b, 0xbc, 0x75, 0xbb,
	0xf9, 0x09, 0x00, 0x00, 0xff, 0xff, 0x23, 0x24, 0x6f, 0x45, 0x06, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgServiceClient is the client API for MsgService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgServiceClient interface {
	MsgSend(ctx context.Context, in *MsgSendReq, opts ...grpc.CallOption) (*MsgSendResp, error)
}

type msgServiceClient struct {
	cc *grpc.ClientConn
}

func NewMsgServiceClient(cc *grpc.ClientConn) MsgServiceClient {
	return &msgServiceClient{cc}
}

func (c *msgServiceClient) MsgSend(ctx context.Context, in *MsgSendReq, opts ...grpc.CallOption) (*MsgSendResp, error) {
	out := new(MsgSendResp)
	err := c.cc.Invoke(ctx, "/msg.MsgService/MsgSend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServiceServer is the server API for MsgService service.
type MsgServiceServer interface {
	MsgSend(context.Context, *MsgSendReq) (*MsgSendResp, error)
}

func RegisterMsgServiceServer(s *grpc.Server, srv MsgServiceServer) {
	s.RegisterService(&_MsgService_serviceDesc, srv)
}

func _MsgService_MsgSend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServiceServer).MsgSend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/msg.MsgService/MsgSend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServiceServer).MsgSend(ctx, req.(*MsgSendReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "msg.MsgService",
	HandlerType: (*MsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MsgSend",
			Handler:    _MsgService_MsgSend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg/msg.proto",
}
